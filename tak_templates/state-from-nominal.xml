<?xml version="1.0" encoding="UTF-8"?>
<state id="{ID}" name="{TAK_NAME}" concept-type="state">
  <categories/>
  <standard-terms/>
  <synonyms/>
  <temporal-semantic downward-hereditary="{TEMPORAL_downward-hereditary}" forward="{TEMPORAL_forward}" backward="{TEMPORAL_backward}" solid="{TEMPORAL_solid}" concatenable="{TEMPORAL_concatenable}" gestalt="{TEMPORAL_gestalt}"/>
  <clippers/>

  <derived-from>
    <derived-from-id>{DERIVED_FROM}</derived-from-id>
  </derived-from>

  <abstraction-at-contexts>
    <abstraction-at-context>
      <at-context>
        <necessary-contexts>
          <necessary-context-id>{DERIVED_FROM}</necessary-context-id>
        </necessary-contexts>
        <exclusion-contexts/>
      </at-context>

      <state-at-context id="{ID}" name="{TAK_NAME}" concept-type="state">
        <categories/>
        <standard-terms/>
        <synonyms/>
        <temporal-semantic downward-hereditary="{TEMPORAL_downward-hereditary}" forward="{TEMPORAL_forward}" backward="{TEMPORAL_backward}" solid="{TEMPORAL_solid}" concatenable="{TEMPORAL_concatenable}" gestalt="{TEMPORAL_gestalt}"/>
        <clippers/>
        <derived-from>
          <derived-from-id>{DERIVED_FROM}</derived-from-id>
        </derived-from>
        <abstraction-at-contexts/>

        <!-- Mapping nominal values to state labels -->
        <mapping-function rank-selection-criteria="{RANK_SELECTION_CRITERIA}">
          <mapping-functions-to-values>

            <!-- Repeat this block for each nominal value -->
            <!-- 
            Each block maps a specific nominal raw value to a state label.
            → RAW_VALUES[idx] = input value from raw concept
            → STATE_LABELS[idx] = output value in the state

            ✔ Each ordinal value must have a matching block here.
            --> 
            <mapping-function-2-value order="0" value="{STATE_LABELS[0]}">
              <evaluation-tree data-type="comparison-function">
                <comparison-function comparison-operator="equal">
                  <left data-type="concept-id-allowed-values">
                    <concept-id-allowed-values id="{DERIVED_FROM}"/>
                  </left>
                  <right data-type="string">
                    <string>{STATE_LABELS[0]}</string>
                  </right>
                </comparison-function>
              </evaluation-tree>
            </mapping-function-2-value>

            <!-- Add mapping-function-2-value blocks with incremented orders for each nominal category -->
          
          </mapping-functions-to-values>
        </mapping-function>

        <!-- Define output ordinal values -->
        <ordinal-allowed-values output-type="ordinal">
          <persistence>
            <global-persistence granularity="second" behavior="pos-pos">
              <interpolation-table>
                <rows/>
              </interpolation-table>
            </global-persistence>
            <local-persistence>
              <good-before value="{GOOD_BEFORE_VALUE}" granularity="{GOOD_BEFORE_GRANULARITY}"/>
              <good-after value="{GOOD_AFTER_VALUE}" granularity="{GOOD_AFTER_GRANULARITY}"/>
            </local-persistence>
          </persistence>
          <values>
            <ordinal-allowed-value order="0" value="{STATE_LABELS[0]}"/>
            <!-- Repeat for additional values -->
          </values>
        </ordinal-allowed-values>
      </state-at-context>
    </abstraction-at-context>
  </abstraction-at-contexts>

  <!-- Empty root-level mapping function required by schema -->
  <mapping-function>
    <mapping-functions-to-values/>
  </mapping-function>

  <!-- Root-level ordinal values required by schema -->
  <ordinal-allowed-values output-type="ordinal">
    <persistence>
      <global-persistence granularity="second" behavior="pos-pos">
        <interpolation-table>
          <rows/>
        </interpolation-table>
      </global-persistence>
      <local-persistence>
        <good-before value="{GOOD_BEFORE_VALUE}" granularity="{GOOD_BEFORE_GRANULARITY}"/>
        <good-after value="{GOOD_AFTER_VALUE}" granularity="{GOOD_AFTER_GRANULARITY}"/>
      </local-persistence>
    </persistence>
    <values>
      <ordinal-allowed-value order="0" value="{STATE_LABELS[0]}"/>
      <!-- Repeat for each ordinal category -->
    </values>
  </ordinal-allowed-values>
</state>